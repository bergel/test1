SystemOrganization addCategory: #'ACD-Glamour-Interface'!!GTDebugSelectionDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:11'!gtACDSenderActionFor: aDebugger	<gtContextACDSenderDebuggingAction>		^ (self gtActionFor: aDebugger)		codePresentationSelector: #senderCodePresentation! !!GTInspectSelectionDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:11'!gtACDSenderActionFor: aDebugger	<gtContextACDSenderDebuggingAction>		^ (self gtActionFor: aDebugger)		codePresentationSelector: #senderCodePresentation! !GTGenericStackDebugger subclass: #ACGlamourDebugger	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ACD-Glamour-Interface'!!ACGlamourDebugger class methodsFor: 'accessing' stamp: 'AndreiChis 9/8/2014 14:05'!defaultTitle	^ 'Announcement Centric Debugger'! !!ACGlamourDebugger class methodsFor: 'testing' stamp: 'AndreiChis 7/12/2013 19:16'!handlesContext: aContext	 ^ (self sessionClass stackFilterFor: aContext) locateAnnouncerEntryPoint notNil ! !!ACGlamourDebugger class methodsFor: 'tools registry' stamp: 'AndreiChis 12/31/2013 21:02'!register	self registerToolsOn: Smalltalk tools.! !!ACGlamourDebugger class methodsFor: 'tools registry' stamp: 'AndreiChis 1/20/2015 14:59'!registerToolsOn: registry	"Add ourselves to registry. See [Smalltalk tools]" 	registry registerDebugger: self withRank: 10.! !!ACGlamourDebugger class methodsFor: 'private' stamp: 'AndreiChis 7/10/2013 11:45'!sessionClass	^ ACDDebugSession ! !!ACGlamourDebugger methodsFor: 'building presentations' stamp: 'AndreiChis 7/8/2013 14:06'!announcerIn: composite	composite custom:			(GTInspector new first				fixedSizePanes: 1; "Only one"				noTitle;				noActions;				showFirst: [ :a | a custom: (ACDAnnouncerBrowser new debugger: self) ];				yourself)! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 9/9/2013 16:28'!announcersBrowser	^ ((self browser paneNamed: #announcer) presentations first panes first presentations first) ! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 1/20/2015 22:49'!codePresentation	^ self receiverCodePresentation! !!ACGlamourDebugger methodsFor: 'building presentations' stamp: 'AndreiChis 9/9/2013 09:35'!codePresentationIn: aComposite forContext: aContext	^ (self methodCodeWidgetIn: aComposite forContext: aContext)		title: [ GTInspector new printObjectAsAnItem: aContext receiver ];		act: [:each |  each entity receiver explore] on: $e entitled: 'Explore'! !!ACGlamourDebugger methodsFor: 'accessing context' stamp: 'AndreiChis 7/12/2013 18:07'!currentContext 	^ self interruptedContext! !!ACGlamourDebugger methodsFor: 'building' stamp: 'AndreiChis 9/8/2014 17:11'!debuggerStructureIn: browser		browser		column: [ :column | 			column				row: #receiver;				row: #announcer;				row: #sender];		column: #stack.! !!ACGlamourDebugger methodsFor: 'building' stamp: 'AndreiChis 12/12/2013 16:09'!debuggerTransmissionsIn: browser		browser transmit		to: #stack;		andShow: [ :composite | self stackIn: composite ].	browser transmit		from: #stack port: #entity;		to: #stack port: #currentContext;		transformed: [ self currentContext ].				browser transmit		from: #stack port: #currentContext;		to: #receiver;		when: [ :session | session notNil ];		andShow: [ :composite | self receiverIn: composite ].	browser transmit		to: #announcer;		andShow: [ :composite | self announcerIn: composite ].	browser transmit		to: #sender;		andShow: [ :composite | self senderIn: composite ]! !!ACGlamourDebugger methodsFor: 'building actions' stamp: 'AndreiChis 1/20/2015 22:43'!installReceiverActionsFor: aPresentation	self installActionsForRootPragmas: self receiverActionsPragmas in: aPresentation! !!ACGlamourDebugger methodsFor: 'building actions' stamp: 'AndreiChis 1/20/2015 22:44'!installSenderActionsFor: aPresentation	self installActionsForRootPragmas: self senderDebuggingActionsPragmas in: aPresentation! !!ACGlamourDebugger methodsFor: 'building actions' stamp: 'AndreiChis 1/20/2015 22:51'!receiverActionsPragmas	^ #(debuggingAction receiverDebuggingAction), self codeActionsPragmas! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 1/20/2015 21:11'!receiverCodePresentation	^ self receiverPane presentations first! !!ACGlamourDebugger methodsFor: 'building presentations' stamp: 'AndreiChis 9/8/2014 17:11'!receiverIn: composite	(self codePresentationIn: composite forContext: self session context)		initialize: [ :code | code selectionInterval: (self session selectedCodeRangeForContext: self currentContext) ];		with: [ :code | self installReceiverActionsFor: code ].			"composite custom:			((GTInspector new first 				fixedSizePanes: 1;				showFirst: [ :a | a custom: (GTDebuggerVariablesBrowser new noActions; noTitle) ];				yourself)					title: 'State')"! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 1/20/2015 21:10'!receiverPane	^ self browser paneNamed: #receiver! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 7/12/2013 18:14'!receiverSelectionInterval	^ self selectionIntervalForPane: #receiver! !!ACGlamourDebugger methodsFor: 'accessing context' stamp: 'AndreiChis 7/12/2013 18:07'!selectedContext	^ self interruptedContext! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:06'!selectedStackContext	^ ((self browser paneNamed: #stack) port: #selection)  value! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 9/9/2013 16:31'!selectedSubscription		^  self announcersBrowser selectedSubscription ! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 1/20/2015 23:01'!senderCodePresentation	^ self senderPane presentations first! !!ACGlamourDebugger methodsFor: 'building actions' stamp: 'AndreiChis 1/20/2015 22:44'!senderDebuggingActionsPragmas	^ { #ACDSenderDebuggingAction }! !!ACGlamourDebugger methodsFor: 'building presentations' stamp: 'AndreiChis 9/9/2013 09:33'!senderIn: composite	(self codePresentationIn: composite forContext: self session senderContext)		initialize: [ :code | code selectionInterval: (self session selectedCodeRangeForContext: self session senderContext) ];		with: [ :code | self installSenderActionsFor: code ]! !!ACGlamourDebugger methodsFor: 'accessing' stamp: 'AndreiChis 1/20/2015 23:02'!senderPane	^ self browser paneNamed: #sender! !!ACGlamourDebugger methodsFor: 'building actions' stamp: 'AndreiChis 1/20/2015 22:42'!stackDebuggingActionsPragmas	^ #( stackDebuggingAction )! !!ACGlamourDebugger methodsFor: 'building presentations' stamp: 'AndreiChis 1/20/2015 22:34'!stackIn: composite	(super stackIn: composite)		selectionAct: [:each|  each selection explore] on: $i entitled: 'Explore'! !!ACGlamourDebugger methodsFor: 'printing/formatting' stamp: 'AndreiChis 9/9/2013 10:04'!textAttributesForStackEntry: aContext	| ctxt |	(self session receiverContext  == aContext )		ifTrue: [ ^ {TextEmphasis bold} ].	(self session senderContext == aContext) 		ifTrue: [ ^ {TextEmphasis bold} ].		ctxt := aContext findContextSuchThat: [ :aSenderContext |		(aSenderContext == self session receiverContext) or: [  aSenderContext == self session senderContext ]  ].	ctxt == self session receiverContext ifTrue: [  ^ {TextColor black} ].	ctxt == self session senderContext ifTrue: [  ^ {TextColor gray} ].			^ {TextColor black}! !!ACGlamourDebugger methodsFor: 'updating' stamp: 'AndreiChis 7/4/2013 17:37'!updateReceiverCodeSelection	((self browser paneNamed: #receiver) 		port: #selectionInterval) 			value:  (self session selectedCodeRangeForContext:  self currentContext)! !!ACGlamourDebugger methodsFor: 'updating' stamp: 'AndreiChis 12/6/2013 17:49'!updateSelectionInterval	self updateReceiverCodeSelection! !!ACGlamourDebugger methodsFor: 'updating' stamp: 'AndreiChis 7/4/2013 17:39'!updateSenderCodeSelection	((self browser paneNamed: #sender) 		port: #selectionInterval) 			value:  (self session selectedCodeRangeForContext:  self session senderContext)! !!GTClearEditorDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:13'!gtACDSenderActionFor: aDebugger	<gtACDSenderDebuggingAction>		^ self gtActionFor: aDebugger! !!GTProfileSelectionDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:11'!gtACDSenderActionFor: aDebugger	<gtContextACDSenderDebuggingAction>		^ (self gtActionFor: aDebugger)		codePresentationSelector: #senderCodePresentation! !!GTExecuteSelectionDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:11'!gtACDSenderActionFor: aDebugger	<gtContextACDSenderDebuggingAction>		^ (self gtActionFor: aDebugger)		codePresentationSelector: #senderCodePresentation! !GLMCompositePresentation subclass: #ACDAnnouncerBrowser	instanceVariableNames: 'debugger'	classVariableNames: ''	poolDictionaries: ''	category: 'ACD-Glamour-Interface'!!ACDAnnouncerBrowser methodsFor: 'building' stamp: 'AndreiChis 1/20/2015 17:12'!announcementIn: aComposite 	"Not such a nice way to reuse the code"	GTObjectVariablesBrowser new variablesIn: aComposite.	aComposite presentations last 		title: 'Announcement';		display: [ :aSession | aSession announcement gtInspectorVariableValuePairs ];		selectionAct: [ :aPresentation |  aPresentation selection explore] on: $i entitled: 'Explore'! !!ACDAnnouncerBrowser methodsFor: 'building' stamp: 'AndreiChis 1/20/2015 17:13'!announcerIn: aComposite 	"Not such a nice way to reuse the code"	GTObjectVariablesBrowser new variablesIn: aComposite.	aComposite presentations last 		title: 'Announcer';		display: [ :aSession | aSession announcer gtInspectorVariableValuePairs ];		selectionAct: [ :aPresentation |  aPresentation selection explore] on: $i entitled: 'Explore' ! !!ACDAnnouncerBrowser methodsFor: 'accessing' stamp: 'AndreiChis 9/9/2013 16:29'!browser 	^ self presentations first! !!ACDAnnouncerBrowser methodsFor: 'building' stamp: 'AndreiChis 2/28/2013 12:04'!componentsIn: aComposite 	self 		subscriptionsIn: aComposite;		announcementIn: aComposite;		announcerIn: aComposite! !!ACDAnnouncerBrowser methodsFor: 'building' stamp: 'AndreiChis 7/16/2013 22:35'!compose	self tabulator with: [:browser | 		browser row: #components.		browser transmit to: #components; andShow: [:aComposite | 			self componentsIn: aComposite ].				browser transmit from: #components port: #strongSelection; toOutsidePort: #selection ]! !!ACDAnnouncerBrowser methodsFor: 'accessing' stamp: 'AndreiChis 2/27/2013 12:34'!debugger	^ debugger! !!ACDAnnouncerBrowser methodsFor: 'accessing' stamp: 'AndreiChis 2/27/2013 12:35'!debugger: anObject	debugger := anObject ! !!ACDAnnouncerBrowser methodsFor: 'building actions' stamp: 'AndreiChis 7/5/2013 14:53'!installSubscriptionsActionsIn: aPresentation 	self debugger installActionsForRootPragmas: { #ACDSubscriptionDebuggingAction } in: aPresentation! !!ACDAnnouncerBrowser methodsFor: 'private' stamp: 'AndreiChis 2/14/2013 14:59'!printAnnouncementTypeFor: anAnnouncementType 	^ anAnnouncementType isCollection 		ifTrue: [			String streamContents: [:s | anAnnouncementType printElementsOn: s]] 		ifFalse: [			anAnnouncementType printString]! !!ACDAnnouncerBrowser methodsFor: 'accessing' stamp: 'AndreiChis 9/9/2013 16:31'!selectedSubscription	^ ((self browser paneNamed: #components) port: #selection)  value! !!ACDAnnouncerBrowser methodsFor: 'accessing' stamp: 'AndreiChis 2/28/2013 11:32'!session	^ self debugger session ! !!ACDAnnouncerBrowser methodsFor: 'building' stamp: 'AndreiChis 1/20/2015 17:13'!subscriptionsIn: aComposite 	aComposite table		title: 'Subscriptions';		showOnly: 100;		display: [ :aSession | aSession activeSubscriptions ];		column: 'Announcement Type' evaluated: [ :aSubscription | 			Text 				string: (self printAnnouncementTypeFor: aSubscription announcementClass )				attributes: (self textAttributesForSubscription: aSubscription) ];		column: 'Action' evaluated: [ :aSubscription | 			Text 				string: (aSubscription action printString )				attributes: (self textAttributesForSubscription: aSubscription) ];		selectionAct: [:each |  each selection explore] on: $i entitled: 'Explore';		with: [ :presentation |			self installSubscriptionsActionsIn: presentation ]! !!ACDAnnouncerBrowser methodsFor: 'private' stamp: 'AndreiChis 7/16/2013 22:32'!textAttributesForSubscription: aSubscription 	(self session executingSubscription == aSubscription) 		ifTrue: [ ^ {TextEmphasis bold} ].			(self session hasSubscriptionExecuted: aSubscription )		ifTrue: [ ^ {TextColor color: Color lightGray. TextEmphasis italic} ].			^ {TextColor black}! !DebugAction subclass: #ACDStackSetReceiver	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ACD-Glamour-Interface'!!ACDStackSetReceiver methodsFor: 'testing' stamp: 'AndreiChis 12/12/2013 16:37'!appliesToDebugger: aDebugger	"Only a context above the sender context can be selected as the receiver"		^ (aDebugger selectedStackContext findContextSuchThat: [ :aContext |		(aContext == aDebugger session senderContext) ]) isNil! !!ACDStackSetReceiver methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:24'!defaultLabel	^ 'Set as receiver'! !!ACDStackSetReceiver methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:24'!defaultOrder	^ 200! !!ACDStackSetReceiver methodsFor: 'actions' stamp: 'AndreiChis 12/12/2013 16:26'!executeAction	self session updateReceiverFrom: self debugger selectedStackContext! !!ACDStackSetReceiver methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:24'!id	^ #gtSetAsReceiverDebuggerAction! !DebugAction subclass: #ACDStackSetSender	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ACD-Glamour-Interface'!!ACDStackSetSender class methodsFor: 'as yet unclassified' stamp: 'AndreiChis 12/12/2013 16:18'!gtACDSenderActionFor: aDebugger	<gtContextACDStackDebuggingAction>! !!ACDStackSetSender methodsFor: 'testing' stamp: 'AndreiChis 12/12/2013 16:21'!appliesToDebugger: aDebugger	"Only a context bellow the receiver context can be selected as the sender"		^ (aDebugger selectedStackContext findContextSuchThat: [ :aSenderContext |		(aSenderContext == aDebugger session receiverContext) ]) isNil! !!ACDStackSetSender methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:04'!defaultLabel	^ 'Set as sender'! !!ACDStackSetSender methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:24'!defaultOrder	^ 205! !!ACDStackSetSender methodsFor: 'actions' stamp: 'AndreiChis 12/12/2013 16:24'!executeAction	self session updateSenderFrom: self debugger selectedStackContext! !!ACDStackSetSender methodsFor: 'accessing' stamp: 'AndreiChis 12/12/2013 16:05'!id	^ #gtSetAsSenderDebuggerAction! !!GTPrintSelectionDebugAction class methodsFor: '*ACD-Glamour-Interface' stamp: 'AndreiChis 1/20/2015 23:11'!gtACDSenderActionFor: aDebugger	<gtContextACDSenderDebuggingAction>		^ (self gtActionFor: aDebugger)		codePresentationSelector: #senderCodePresentation! !